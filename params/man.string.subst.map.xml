<refentry id="man.string.subst.map">
<refmeta>
<refentrytitle>man.string.subst.map</refentrytitle>
<refmiscinfo role="type">string</refmiscinfo>
</refmeta>
<refnamediv>
<refname>man.string.subst.map</refname>
<refpurpose>Specifies a set of string substitutions</refpurpose>
</refnamediv>

<refsynopsisdiv>
<src:fragment id='man.string.subst.map.frag'>
<xsl:param name="man.string.subst.map">
  <substitution oldstring="\" newstring="\\"/>
  <substitution oldstring="\\fB" newstring="\fB"/>
  <substitution oldstring="\\fI" newstring="\fI"/>
  <substitution oldstring="\\fR" newstring="\fR"/>
  <substitution oldstring='.\\"' newstring='.\"'/>
  <!-- add backslash before any apostrophe at start of a line -->
  <substitution oldstring="&#10;'" newstring="&#10;\'"/>
</xsl:param>
</src:fragment>
</refsynopsisdiv>

<refsect1><title>Description</title>

<para>The <parameter>man.string.subst.map</parameter> parameter
contains a "map" that specifies a set of string substitutions to
perform over the entire roff source for each man page, either just
before generating final man-page output (that is, before writing
man-page files to disk) or, if the value of the
<parameter>man.charmap.enabled</parameter> parameter is non-zero,
before applying the roff character map.</para>

<warning>
  <para>Do you not change value of the
  <parameter>man.string.subst.map</parameter> parameter unless
  you are sure what you are doing. If you remove any of the default
  mappings, you are likely to end up with broken output. And be very
  careful about adding anything to it. Because it is used for doing
  string substitution over the entire roff source of each man page, it
  causes target strings to be replaced in roff requests and escapes,
  not just in the visible contents.</para>

  <para>In particular, do not attempt to add mappings for the
  dot/period character or hyphen/minus character
  (&amp;#45;/&amp;#x2D;). Doing so will break your output. For an
  explanation, see <xref linkend="DotsAndHyphens"/>.</para>

</warning>

<para>The map contains one or more <tag>substitution</tag> elements,
each of which has two attributes:
<variablelist>
  <varlistentry>
    <term>oldstring</term>
    <listitem>
      <simpara>string to replace</simpara>
    </listitem>
  </varlistentry>
  <varlistentry>
    <term>newstring</term>
    <listitem>
      <simpara>string with which to replace <tag class="attribute"
      >oldstring</tag></simpara>
    </listitem>
  </varlistentry>
</variablelist>
</para>

<refsect2 id="DotsAndHyphens">
  <title>About adding backslashes before dots and hyphens</title>
  <para>The stylesheets do not add backslashes before periods/dots or
  hyphens (&amp;#45;). One reason is that, because string substitution
  is performed over the entire roff source of each man page, it would
  be complicated to replace dots and hyphens in visible contents
  without also causing them to be replaced in roff requests and
  escapes; for example, without causing, say, the
  <literal>.TH</literal> roff macro to be replaced with
  <literal>\.TH</literal>. Additionally:

  <itemizedlist>

    <listitem>
      <para>Backslashes in front of periods/dots are needed only in
      the very rare case where a period is the very first character in
      a line, without any space in front of it. A better way to deal
      with that rare case is to add a zero-width space in front of the
      offending dot(s) in your source</para>
    </listitem>
    <listitem>
      <para>Backslashes in front of &amp;#45;/&amp;#x2D; are
      needed... when?  Myself, I don't know, so the current
      stylesheets do not add backslashes in front of them, ever. If
      there is a specific case where they are necessary or desirable,
      then we need to add code for that case, not just do a blanket
      conversion.</para>
      <para>And, anyway, my understanding from reading the groff docs
      is that <literal>\-</literal> is, specifically, a
      <emphasis>minus sign</emphasis>. So if you have places where you
      want a minus sign to be output instead of &amp;#45;, then use
      &amp;#8722;/&amp;#x2212; in your source instead. And if you have
      places where you want an en dash, &amp;#8211;/&amp;#x2013;. Or
      if there are places where the stylesheets are internally
      generating &amp;#45; where they should be generating &amp;#8722;
      or &amp;#8211;, then we need to fix those, not just do blanket
      conversion.</para>
    </listitem>
  </itemizedlist>
</para>
</refsect2>

</refsect1>
</refentry>
